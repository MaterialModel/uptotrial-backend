[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "uptotrial"
version = "0.1.0"
description = "FastAPI-based Clinical Trials Search API"
readme = "README.md"
authors = ["UpToTrial Team"]
license = "Proprietary"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
alembic = "1.15.2"
annotated-types = "0.7.0"
anyio = "4.9.0"
certifi = "2025.1.31"
click = "8.1.8"
distro = "1.9.0"
fastapi = "0.115.12"
h11 = "0.14.0"
httpcore = "1.0.8"
httptools = "0.6.4"
httpx = "0.28.1"
idna = "3.10"
jiter = "0.9.0"
mako = "1.3.10"
markdown-it-py = "3.0.0"
markupsafe = "3.0.2"
mdurl = "0.1.2"
openai = "1.75.0"
asyncpg = "0.30.0"
greenlet = "3.2.1"
pydantic = "2.11.3"
pydantic-core = "2.33.1"
pydantic-settings = "2.9.1"
pygments = "2.19.1"
python-dotenv = "1.1.0"
pyyaml = "6.0.2"
rich = "14.0.0"
shellingham = "1.5.4"
sniffio = "1.3.1"
sqlalchemy = "2.0.40"
sqlmodel = "0.0.24"
starlette = "0.46.2"
structlog = "25.2.0"
tomlkit = "0.13.2"
tqdm = "4.67.1"
typer = "0.15.2"
typing-extensions = "4.13.2"
typing-inspection = "0.4.0"
uvicorn = "0.34.2"
uvloop = "0.21.0"
watchfiles = "1.0.5"
websockets = "15.0.1"
requests = "2.32.3"
urllib3 = "2.4.0"
charset-normalizer = "3.4.1"
jinja2 = "3.1.6"
openai-agents = "0.0.11"
griffe = "1.7.2"
httpx-sse = "0.4.0"
mcp = "1.6.0"
sse-starlette = "2.2.1"
types-requests = "2.32.0.20250328"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.0"
pytest-cov = ">=4.1.0"
pytest-asyncio = ">=0.21.0"
ruff = ">=0.2.2"
mypy = ">=1.8.0"
tox = ">=4.12.1"
black = ">=24.2.0"
isort = ">=5.13.2"
pre-commit = ">=3.6.0"

[tool.ruff]
target-version = "py312"
line-length = 88
exclude = ["*.ipynb"]

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "ANN", "PTH", "FBT", "A", "COM", "C4", "DTZ", "T10", "EM", "ISC", "ICN", "G", "PIE", "PYI", "PT", "Q", "RET", "SIM", "TID", "ARG", "PD", "PGH", "PL", "TRY", "RUF"]
ignore = ["ANN401", "E501", "RET504",
          "ARG001", "TRY003", "PLR2004",
          "EM102", "PLR0913", "B008",
          "TRY400", "RUF200", "N815",
          "G004", "EM101", "PLR0912",
          "PLR0915", "ANN003"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::FutureWarning",
]

# New tox configuration
[tool.tox]
legacy_tox_ini = """
[tox]
env_list = py312, lint, typecheck, coverage
isolated_build = True

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
deps =
    pytest>=8.0.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
commands =
    pytest {tty:--color=yes} {posargs:tests}
basepython = python3.12

[testenv:lint]
description = run linters
skip_install = true
deps =
    ruff>=0.2.2
commands =
    ruff check {posargs:.}
basepython = python3.12

[testenv:typecheck]
description = run type checks
# Install the package itself with dev dependencies for mypy
deps =
    .[dev]  
    mypy>=1.8.0
commands =
    mypy {posargs:app tests}
basepython = python3.12
    
[testenv:coverage]
description = run tests with coverage reporting
deps =
    pytest>=8.0.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
commands =
    pytest --cov=app --cov-report=term-missing --cov-report=xml --cov-report=html {posargs:tests}
basepython = python3.12
    
[testenv:specific]
description = run specific tests with custom options
deps =
    pytest>=8.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
commands =
    pytest {posargs}
basepython = python3.12
"""
